{"version":3,"sources":["constants.ts","notification.ts","helpers.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["\n\nexport const dotNumberKey = 'dotNumber';\nexport const minNum = 0;\nexport const maxNum = 5;\nexport const defaultNum = 2;\nexport const currency:HTMLElement = document.querySelector('.currency');\nexport const usedCurrenciesKey = 'usedCurrency';\nexport const inputEl:HTMLInputElement = currency.querySelector('.input');\nexport const getBtn:HTMLElement = currency.querySelector('.get');\nexport const clearBtn:HTMLElement = currency.querySelector('.clear');\nexport const resEl:HTMLElement = currency.querySelector('.result');\nexport const fromEl:HTMLSelectElement = currency.querySelector('.select-from');\nexport const toEl:HTMLSelectElement = currency.querySelector('.select-to');\nexport const burger:HTMLElement = currency.querySelector('.menu');\nexport const reverse:HTMLElement = currency.querySelector('.reverse');\nexport const saveDefaultBtn:HTMLElement = currency.querySelector('.save-default');\nexport const defaultFrom:HTMLSelectElement = currency.querySelector('.default-from');\nexport const defaultTo:HTMLSelectElement = currency.querySelector('.default-to');\nexport const saveDotBtn:HTMLElement = currency.querySelector('.save-dot-number');\nexport const dotNumberInput:HTMLInputElement = currency.querySelector('.dot-number');\nexport const addCurrencySelect:HTMLSelectElement = currency.querySelector('.add-currency-select');\nexport const saveAddCurrencyBtn:HTMLElement = currency.querySelector('.save-add-currency');\nexport const setInitialCurrenciesBtn:HTMLElement = currency.querySelector('.set-initial-btn');\nexport const isFromAttr = 'isFrom';\nexport const isToAttr = 'isTo';\nexport const apiGetAll = 'https://free.currencyconverterapi.com/api/v6/currencies';\nexport const apiGetValue = 'https://free.currencyconverterapi.com/api/v5/convert';\nexport const initialUsedCurrencies = [\n\t{id: 'PLN', currencyName: 'Polish Zloty', name: 'Polish Zloty', [isFromAttr]:true},\n\t{id: 'EUR', currencyName: 'Euro', name: 'Euro'},\n\t{id: 'USD', currencyName: 'United States Dollar', name: 'United States Dollar'},\n\t{id: 'UAH', currencyName: 'Ukrainian Hryvnia', name: 'Ukrainian Hryvnia', [isToAttr]:true},\n\t{id: 'RUB', currencyName: 'Russian Ruble', name: 'Russian Ruble'}\n]","export function initNotification() {\n\tif (typeof(Notification) === 'undefined') {\n\t\treturn;\n\t}\n\tNotification.requestPermission(function(status) {\n\t\tconsole.log('Notification permission status:', status);\n\t});\n}\n\nexport function displayNotification(text) {\n    if (Notification.permission == 'granted') {\n        navigator.serviceWorker.getRegistration().then(function(reg) {\n            reg.showNotification(text);\n        });\n    }\n}","import { apiGetValue, fromEl, toEl, defaultFrom, defaultTo, inputEl, resEl } from './constants';\n\ninterface OptionSettings {\n\tisShort: Boolean,\n\tselectPosition: string\n}\n\nexport function getQuery(itemFrom, itemTo) {\n\treturn `${apiGetValue}?q=${itemFrom}_${itemTo}&compact=y`;\n}\n\nexport function clearSelectors() {\n\tfromEl.innerHTML = '';\n\ttoEl.innerHTML = '';\n\tdefaultFrom.innerHTML = '';\n\tdefaultTo.innerHTML = '';\n}\n\nexport function clear() {\n\tinputEl.value = '';\n\tresEl.innerText = '';\n\tinputEl.focus();\n}\n\nexport function getMountedOptions(data, settings?:OptionSettings) {\n\tconst options = Object.keys(data)\n\t\t.map(item => createOption(data[item], settings))\n\t\t.sort((a,b) => a.dataset.name < b.dataset.name ? -1 : 1);\n\tconst wrapper = document.createDocumentFragment();\n\n\toptions.forEach(item => wrapper.appendChild(item));\n\n\treturn wrapper;\n}\n\nexport function createOption(item, settings:OptionSettings) {\n\tconst el = document.createElement('option');\n\n\tel.value = item.id;\n\tel.id = item.id;\n\tel.dataset.name = item.currencyName;\n\n\tif (settings.isShort) {\n\t\tel.innerText = item.id;\n\t} else {\n\t\tel.innerText = `${item.currencyName} (${item.id})`;\n\t}\n\n\tif (item[settings.selectPosition]) {\n\t\tel.selected = true;\n\t} else {\n\t\tel.selected = false;\n\t}\n\n\treturn el;\n}","import {\n\tdotNumberKey, minNum, maxNum, defaultNum, usedCurrenciesKey,\n\tinputEl, getBtn, clearBtn, resEl, fromEl, toEl,\tburger, reverse,\n\tsaveDefaultBtn,\tdefaultFrom, defaultTo,\tsaveDotBtn,\tdotNumberInput,\n\taddCurrencySelect, saveAddCurrencyBtn,\tsetInitialCurrenciesBtn,\n\tisFromAttr,\tisToAttr, apiGetAll, apiGetValue, initialUsedCurrencies\n} from './constants';\nimport { initNotification, displayNotification } from './notification';\nimport { getQuery, clearSelectors, clear, getMountedOptions } from './helpers';\n\nlet allCurrencies;\n\ninitialize();\n\nfunction initialize() {\n\tinitNotification();\n\tinitListeners();\n\tsetCurrenciesSelectors();\n\tsetDefaultDot();\n\tsetAllCurrencies();\n};\n\nfunction initListeners() {\n\tgetBtn.addEventListener('click', getCurrency);\n\tclearBtn.addEventListener('click', clear);\n\tburger.addEventListener('click', toggleMenu);\n\treverse.addEventListener('click', toggleCurrency);\n\tsaveDefaultBtn.addEventListener('click', saveDefaultHandler);\n\tsaveDotBtn.addEventListener('click', saveDotNumber);\n\tsaveAddCurrencyBtn.addEventListener('click', saveAddCurrency);\n\tsetInitialCurrenciesBtn.addEventListener('click', setInitialCurrencies);\n}\n\nfunction setCurrenciesSelectors() {\n\tclearSelectors();\n\tsetSelectors();\n}\n\nfunction setSelectors() {\n\tconst data = getData(usedCurrenciesKey) || initialUsedCurrencies;\n\n\tfromEl.appendChild(getMountedOptions(data, {selectPosition: isFromAttr, isShort: true}));\n\ttoEl.appendChild(getMountedOptions(data, {selectPosition: isToAttr, isShort: true}));\n\tdefaultFrom.appendChild(getMountedOptions(data, {selectPosition: isFromAttr, isShort: true}));\n\tdefaultTo.appendChild(getMountedOptions(data, {selectPosition: isToAttr, isShort: true}));\n}\n\nfunction getCurrency() {\n\tconst fromVal = fromEl.value;\n\tconst toVal = toEl.value;\n\tconst query = getQuery(fromVal, toVal);\n\n\tif (fromVal === toVal) {\n\t\tcalculate(1);\n\t\treturn;\n\t}\n\n\tfetch(query)\n\t\t.then(resp => {return resp.json()})\n\t\t.then(data => {\n\t\t\tlet rate = 1;\n\n\t\t\tfor (let item in data) {\n\t\t\t\trate = data[item].val;\n\t\t\t}\n\t\t\tif (!navigator.onLine) {\n\t\t\t\tdisplayNotification('Application works offline');\n\t\t\t}\n\t\t\tcalculate(rate);\n\t\t})\n\t\t.catch(err => resEl.innerText = `Some problems with request - ${err}`);\n}\n\nfunction calculate(rate) {\n\tconst num = Number(inputEl.value);\n\tconst numDotStored = getData(dotNumberKey);\n\tconst numDot = numDotStored !== null ? numDotStored : defaultNum;\n\n\tresEl.innerText = (Math.round(rate * num * Math.pow(10, numDot)) / Math.pow(10, numDot)).toString();\n}\n\nfunction toggleMenu() {\n\tconst activeClass = '_burger-active';\n\tconst body = document.body;\n\n\tif (body.classList.contains(activeClass)) {\n\t\tbody.classList.remove(activeClass);\n\t} else {\n\t\tbody.classList.add(activeClass);\n\t}\n}\n\nfunction toggleCurrency() {\n\tconst firstIndex = fromEl.selectedIndex;\n\tconst secondIndex = toEl.selectedIndex;\n\n\t(<HTMLOptionElement>fromEl[secondIndex]).selected = true;\n\t(<HTMLOptionElement>toEl[firstIndex]).selected = true;\n}\n\nfunction saveDefaultHandler() {\n\tconst firstValue = defaultFrom[defaultFrom.selectedIndex].id;\n\tconst secondValue = defaultTo[defaultTo.selectedIndex].id;\n\tconst data = getData(usedCurrenciesKey) || initialUsedCurrencies;\n\n\tdata.forEach(item => {\n\t\tconst id = item.id\n\n\t\titem[isFromAttr] = false;\n\t\titem[isToAttr] = false;\n\n\t\tif (id === firstValue) {\n\t\t\titem[isFromAttr] = true;\n\t\t}\n\n\t\tif (id === secondValue) {\n\t\t\titem[isToAttr] = true;\n\t\t}\n\t});\n\tsaveData(usedCurrenciesKey, data);\n\tsetCurrenciesSelectors();\n\ttoggleMenu();\n}\n\nfunction saveData(key, value) {\n\tlocalStorage.setItem(key, JSON.stringify(value));\n}\n\nfunction getData(key) {\n\tconst data = localStorage.getItem(key);\n\n\treturn JSON.parse(data);\n}\n\nfunction setDefaultDot() {\n\tconst data = getData(dotNumberKey);\n\n\tdotNumberInput.value = data !== null ? data : defaultNum;\n}\n\nfunction saveDotNumber() {\n\tconst value = Number(dotNumberInput.value);\n\tconst num = (value < minNum || value > maxNum) ? defaultNum : value;\n\n\tsaveData(dotNumberKey, num);\n\ttoggleMenu();\n}\n\nfunction setAllCurrencies() {\n\tfetch(apiGetAll)\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tallCurrencies = data.results;\n\t\t\tmountAllCurrencies(allCurrencies);\n\t\t})\n}\n\nfunction mountAllCurrencies(data=allCurrencies) {\n\tconst filteredData = filterAlreadyExist(data);\n\tconst mountedOptions = getMountedOptions(filteredData);\n\n\taddCurrencySelect.innerHTML = '';\n\taddCurrencySelect.appendChild(mountedOptions);\n}\n\nfunction filterAlreadyExist(data) {\n\tconst usedCurrencies = getData(usedCurrenciesKey) || initialUsedCurrencies;\n\tconst res = {};\n\n\tObject.keys(data).forEach(item => {\n\t\tconst id = data[item].id;\n\t\tif (usedCurrencies.filter(currency => currency.id === item).length === 0) {\n\t\t\tres[id] = data[id];\n\t\t}\n\t});\n\n\treturn res;\n}\n\nfunction saveAddCurrency() {\n\tconst usedCurrencies = getData(usedCurrenciesKey) || initialUsedCurrencies;\n\tconst newCurrency = addCurrencySelect[addCurrencySelect.selectedIndex];\n\tconst newCurrencies = [...usedCurrencies];\n\n\tnewCurrencies.push({\n\t\tid: newCurrency.id,\n\t\tcurrencyName: newCurrency.innerText\n\t})\n\n\tsaveData(usedCurrenciesKey, newCurrencies);\n\tsetCurrenciesSelectors();\n\tmountAllCurrencies();\n\ttoggleMenu();\n}\n\nfunction setInitialCurrencies() {\n\tsaveData(usedCurrenciesKey, null);\n\tmountAllCurrencies();\n\tsetCurrenciesSelectors();\n\ttoggleMenu();\n}"]}